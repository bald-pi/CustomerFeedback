name: Customer_feedback

services:

  feedback-api:
    image: ${DOCKER_REGISTRY-}feedback-api
    container_name: "feedback-api"
    build:
      context: .
      dockerfile: src/FeedbackSubmission.API/Dockerfile
    ports:
    - "5000:5000"
    - "5001:5001"
    depends_on:
    - feedback-database
    environment: 
        OTEL_EXPORTER_OTLP_ENDPOINT: "http://feedback-jagger:4317"
        

  feedback-analytics-api:
    image: ${DOCKER_REGISTRY-}feedback-analytics-api
    container_name: "feedback-analytics-api"
    build:
      context: .
      dockerfile: src/FeedbackSubmission.Analytics.API/Dockerfile
    ports:
    - "6000:6000"
    - "6001:6001"
    depends_on:
    - feedback-mongo
    environment: 
        OTEL_EXPORTER_OTLP_ENDPOINT: "http://feedback-jagger:4317"

  feedback-database:
    image: postgres:latest
    container_name: "feedback-database"
    environment:
     - POSTGRES_DB=feedback.database
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    ports:
    - "5432:5432"
    volumes:
    - ./.containers/database/feedback:/var/lib/postgresql/data
  
  feedback-mongo:
    image: mongo:latest
    container_name: "feedback-mongo"
    command:
        ["--replSet", "feedback-replicaset", "--port", "27017",]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'feedback-replicaset',members:[{_id:0,host:'feedback-mongo:27017',priority:1},{_id:1,host:'feedback-mongo-replicaset:27018',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    ports:
     - "27017:27017"
    volumes:
    - ./.containers/database/feedback_analytics:/data/db

  feedback-mongo-replicaset:
    image: mongo:latest
    command:
        ["--replSet", "feedback-replicaset", "--port", "27018",]
    container_name: "feedback-mongo-replicaset"
    ports:
     - "27018:27018"
    volumes:
    - ./.containers/database/feedback_analytics-replicaset:/data/db
    depends_on:
     - feedback-mongo

  feedback-seq:
    image: datalust/seq
    container_name: "feedback-seq"
    environment:
     - ACCEPT_EULA=Y
    ports:
     - "5341:5341"
     - "5050:80"
    depends_on:
        - feedback-api
  
  feedback-rabbitmq:
    image: rabbitmq:management
    container_name: "feedback-rabbitmq"
    ports:
     - "5672:5672"
     - "15672:15672"
    volumes:
     - ./.containers/rabbitmq/data/:/var/lib/rabbitmq/
     - ./.containers/rabbitmq/log/:/var/log/rabbitmq
    depends_on:
        - feedback-api
        - feedback-analytics-api
  
  feedback-jagger:
    image: jaegertracing/all-in-one:latest
    container_name: "feedback-jagger"
    ports:
     - "16686:16686"
     - "4318:4318"